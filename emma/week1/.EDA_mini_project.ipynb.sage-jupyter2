{"backend_state":"init","connection_file":"/projects/7c08c135-501d-4a5d-8ef1-fb9399dd6cfe/.local/share/jupyter/runtime/kernel-f6af518b-6e79-4d7b-bead-d8fec834c945.json","kernel":"python3-ubuntu","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"interpreter":{"hash":"08210294964727e4010dccc398c44f22b92a2e77e2aceea574ad21eae77cd8e8"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.10"},"orig_nbformat":4},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"594562","input":"","pos":12,"type":"cell"}
{"cell_type":"code","exec_count":48,"id":"f08aa5","input":"#Before anything else let's import our library for data analysis, pandas.\nimport pandas as pd","pos":2,"type":"cell"}
{"cell_type":"code","exec_count":49,"id":"dc2ca0","input":"penguins_dataframe = pd.read_csv(\"https://raw.githubusercontent.com/mcnakhaee/palmerpenguins/master/palmerpenguins/data/penguins-raw.csv\")","pos":4,"type":"cell"}
{"cell_type":"code","exec_count":50,"id":"b384d3","input":"# Run head() on penguins_dataframe\npenguins_dataframe.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>studyName</th>\n      <th>Sample Number</th>\n      <th>Species</th>\n      <th>Region</th>\n      <th>Island</th>\n      <th>Stage</th>\n      <th>Individual ID</th>\n      <th>Clutch Completion</th>\n      <th>Date Egg</th>\n      <th>Culmen Length (mm)</th>\n      <th>Culmen Depth (mm)</th>\n      <th>Flipper Length (mm)</th>\n      <th>Body Mass (g)</th>\n      <th>Sex</th>\n      <th>Delta 15 N (o/oo)</th>\n      <th>Delta 13 C (o/oo)</th>\n      <th>Comments</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>PAL0708</td>\n      <td>1</td>\n      <td>Adelie Penguin (Pygoscelis adeliae)</td>\n      <td>Anvers</td>\n      <td>Torgersen</td>\n      <td>Adult, 1 Egg Stage</td>\n      <td>N1A1</td>\n      <td>Yes</td>\n      <td>2007-11-11</td>\n      <td>39.1</td>\n      <td>18.7</td>\n      <td>181.0</td>\n      <td>3750.0</td>\n      <td>MALE</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Not enough blood for isotopes.</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>PAL0708</td>\n      <td>2</td>\n      <td>Adelie Penguin (Pygoscelis adeliae)</td>\n      <td>Anvers</td>\n      <td>Torgersen</td>\n      <td>Adult, 1 Egg Stage</td>\n      <td>N1A2</td>\n      <td>Yes</td>\n      <td>2007-11-11</td>\n      <td>39.5</td>\n      <td>17.4</td>\n      <td>186.0</td>\n      <td>3800.0</td>\n      <td>FEMALE</td>\n      <td>8.94956</td>\n      <td>-24.69454</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>PAL0708</td>\n      <td>3</td>\n      <td>Adelie Penguin (Pygoscelis adeliae)</td>\n      <td>Anvers</td>\n      <td>Torgersen</td>\n      <td>Adult, 1 Egg Stage</td>\n      <td>N2A1</td>\n      <td>Yes</td>\n      <td>2007-11-16</td>\n      <td>40.3</td>\n      <td>18.0</td>\n      <td>195.0</td>\n      <td>3250.0</td>\n      <td>FEMALE</td>\n      <td>8.36821</td>\n      <td>-25.33302</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>PAL0708</td>\n      <td>4</td>\n      <td>Adelie Penguin (Pygoscelis adeliae)</td>\n      <td>Anvers</td>\n      <td>Torgersen</td>\n      <td>Adult, 1 Egg Stage</td>\n      <td>N2A2</td>\n      <td>Yes</td>\n      <td>2007-11-16</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Adult not sampled.</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>PAL0708</td>\n      <td>5</td>\n      <td>Adelie Penguin (Pygoscelis adeliae)</td>\n      <td>Anvers</td>\n      <td>Torgersen</td>\n      <td>Adult, 1 Egg Stage</td>\n      <td>N3A1</td>\n      <td>Yes</td>\n      <td>2007-11-16</td>\n      <td>36.7</td>\n      <td>19.3</td>\n      <td>193.0</td>\n      <td>3450.0</td>\n      <td>FEMALE</td>\n      <td>8.76651</td>\n      <td>-25.32426</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"  studyName  Sample Number                              Species  Region  \\\n0   PAL0708              1  Adelie Penguin (Pygoscelis adeliae)  Anvers   \n1   PAL0708              2  Adelie Penguin (Pygoscelis adeliae)  Anvers   \n2   PAL0708              3  Adelie Penguin (Pygoscelis adeliae)  Anvers   \n3   PAL0708              4  Adelie Penguin (Pygoscelis adeliae)  Anvers   \n4   PAL0708              5  Adelie Penguin (Pygoscelis adeliae)  Anvers   \n\n      Island               Stage Individual ID Clutch Completion    Date Egg  \\\n0  Torgersen  Adult, 1 Egg Stage          N1A1               Yes  2007-11-11   \n1  Torgersen  Adult, 1 Egg Stage          N1A2               Yes  2007-11-11   \n2  Torgersen  Adult, 1 Egg Stage          N2A1               Yes  2007-11-16   \n3  Torgersen  Adult, 1 Egg Stage          N2A2               Yes  2007-11-16   \n4  Torgersen  Adult, 1 Egg Stage          N3A1               Yes  2007-11-16   \n\n   Culmen Length (mm)  Culmen Depth (mm)  Flipper Length (mm)  Body Mass (g)  \\\n0                39.1               18.7                181.0         3750.0   \n1                39.5               17.4                186.0         3800.0   \n2                40.3               18.0                195.0         3250.0   \n3                 NaN                NaN                  NaN            NaN   \n4                36.7               19.3                193.0         3450.0   \n\n      Sex  Delta 15 N (o/oo)  Delta 13 C (o/oo)  \\\n0    MALE                NaN                NaN   \n1  FEMALE            8.94956          -24.69454   \n2  FEMALE            8.36821          -25.33302   \n3     NaN                NaN                NaN   \n4  FEMALE            8.76651          -25.32426   \n\n                         Comments  \n0  Not enough blood for isotopes.  \n1                             NaN  \n2                             NaN  \n3              Adult not sampled.  \n4                             NaN  "},"exec_count":50,"output_type":"execute_result"}},"pos":6,"type":"cell"}
{"cell_type":"code","exec_count":51,"id":"ac73dd","input":"# Run tail() on penguins_dataframe\npenguins_dataframe.tail()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>studyName</th>\n      <th>Sample Number</th>\n      <th>Species</th>\n      <th>Region</th>\n      <th>Island</th>\n      <th>Stage</th>\n      <th>Individual ID</th>\n      <th>Clutch Completion</th>\n      <th>Date Egg</th>\n      <th>Culmen Length (mm)</th>\n      <th>Culmen Depth (mm)</th>\n      <th>Flipper Length (mm)</th>\n      <th>Body Mass (g)</th>\n      <th>Sex</th>\n      <th>Delta 15 N (o/oo)</th>\n      <th>Delta 13 C (o/oo)</th>\n      <th>Comments</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>339</th>\n      <td>PAL0910</td>\n      <td>64</td>\n      <td>Chinstrap penguin (Pygoscelis antarctica)</td>\n      <td>Anvers</td>\n      <td>Dream</td>\n      <td>Adult, 1 Egg Stage</td>\n      <td>N98A2</td>\n      <td>Yes</td>\n      <td>2009-11-19</td>\n      <td>55.8</td>\n      <td>19.8</td>\n      <td>207.0</td>\n      <td>4000.0</td>\n      <td>MALE</td>\n      <td>9.70465</td>\n      <td>-24.53494</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>340</th>\n      <td>PAL0910</td>\n      <td>65</td>\n      <td>Chinstrap penguin (Pygoscelis antarctica)</td>\n      <td>Anvers</td>\n      <td>Dream</td>\n      <td>Adult, 1 Egg Stage</td>\n      <td>N99A1</td>\n      <td>No</td>\n      <td>2009-11-21</td>\n      <td>43.5</td>\n      <td>18.1</td>\n      <td>202.0</td>\n      <td>3400.0</td>\n      <td>FEMALE</td>\n      <td>9.37608</td>\n      <td>-24.40753</td>\n      <td>Nest never observed with full clutch.</td>\n    </tr>\n    <tr>\n      <th>341</th>\n      <td>PAL0910</td>\n      <td>66</td>\n      <td>Chinstrap penguin (Pygoscelis antarctica)</td>\n      <td>Anvers</td>\n      <td>Dream</td>\n      <td>Adult, 1 Egg Stage</td>\n      <td>N99A2</td>\n      <td>No</td>\n      <td>2009-11-21</td>\n      <td>49.6</td>\n      <td>18.2</td>\n      <td>193.0</td>\n      <td>3775.0</td>\n      <td>MALE</td>\n      <td>9.46180</td>\n      <td>-24.70615</td>\n      <td>Nest never observed with full clutch.</td>\n    </tr>\n    <tr>\n      <th>342</th>\n      <td>PAL0910</td>\n      <td>67</td>\n      <td>Chinstrap penguin (Pygoscelis antarctica)</td>\n      <td>Anvers</td>\n      <td>Dream</td>\n      <td>Adult, 1 Egg Stage</td>\n      <td>N100A1</td>\n      <td>Yes</td>\n      <td>2009-11-21</td>\n      <td>50.8</td>\n      <td>19.0</td>\n      <td>210.0</td>\n      <td>4100.0</td>\n      <td>MALE</td>\n      <td>9.98044</td>\n      <td>-24.68741</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>343</th>\n      <td>PAL0910</td>\n      <td>68</td>\n      <td>Chinstrap penguin (Pygoscelis antarctica)</td>\n      <td>Anvers</td>\n      <td>Dream</td>\n      <td>Adult, 1 Egg Stage</td>\n      <td>N100A2</td>\n      <td>Yes</td>\n      <td>2009-11-21</td>\n      <td>50.2</td>\n      <td>18.7</td>\n      <td>198.0</td>\n      <td>3775.0</td>\n      <td>FEMALE</td>\n      <td>9.39305</td>\n      <td>-24.25255</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"    studyName  Sample Number                                    Species  \\\n339   PAL0910             64  Chinstrap penguin (Pygoscelis antarctica)   \n340   PAL0910             65  Chinstrap penguin (Pygoscelis antarctica)   \n341   PAL0910             66  Chinstrap penguin (Pygoscelis antarctica)   \n342   PAL0910             67  Chinstrap penguin (Pygoscelis antarctica)   \n343   PAL0910             68  Chinstrap penguin (Pygoscelis antarctica)   \n\n     Region Island               Stage Individual ID Clutch Completion  \\\n339  Anvers  Dream  Adult, 1 Egg Stage         N98A2               Yes   \n340  Anvers  Dream  Adult, 1 Egg Stage         N99A1                No   \n341  Anvers  Dream  Adult, 1 Egg Stage         N99A2                No   \n342  Anvers  Dream  Adult, 1 Egg Stage        N100A1               Yes   \n343  Anvers  Dream  Adult, 1 Egg Stage        N100A2               Yes   \n\n       Date Egg  Culmen Length (mm)  Culmen Depth (mm)  Flipper Length (mm)  \\\n339  2009-11-19                55.8               19.8                207.0   \n340  2009-11-21                43.5               18.1                202.0   \n341  2009-11-21                49.6               18.2                193.0   \n342  2009-11-21                50.8               19.0                210.0   \n343  2009-11-21                50.2               18.7                198.0   \n\n     Body Mass (g)     Sex  Delta 15 N (o/oo)  Delta 13 C (o/oo)  \\\n339         4000.0    MALE            9.70465          -24.53494   \n340         3400.0  FEMALE            9.37608          -24.40753   \n341         3775.0    MALE            9.46180          -24.70615   \n342         4100.0    MALE            9.98044          -24.68741   \n343         3775.0  FEMALE            9.39305          -24.25255   \n\n                                  Comments  \n339                                    NaN  \n340  Nest never observed with full clutch.  \n341  Nest never observed with full clutch.  \n342                                    NaN  \n343                                    NaN  "},"exec_count":51,"output_type":"execute_result"}},"pos":7,"type":"cell"}
{"cell_type":"code","exec_count":52,"id":"a86949","input":"# Print the name of all the columns in our dataframe\npenguins_dataframe.columns","output":{"0":{"data":{"text/plain":"Index(['studyName', 'Sample Number', 'Species', 'Region', 'Island', 'Stage',\n       'Individual ID', 'Clutch Completion', 'Date Egg', 'Culmen Length (mm)',\n       'Culmen Depth (mm)', 'Flipper Length (mm)', 'Body Mass (g)', 'Sex',\n       'Delta 15 N (o/oo)', 'Delta 13 C (o/oo)', 'Comments'],\n      dtype='object')"},"exec_count":52,"output_type":"execute_result"}},"pos":8,"type":"cell"}
{"cell_type":"code","exec_count":53,"id":"d6a063","input":"# Use google to find out how to print the number of rows in this dataset.\npenguins_dataframe.info()","output":{"0":{"name":"stdout","output_type":"stream","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 344 entries, 0 to 343\nData columns (total 17 columns):\n #   Column               Non-Null Count  Dtype  \n---  ------               --------------  -----  \n 0   studyName            344 non-null    object \n 1   Sample Number        344 non-null    int64  \n 2   Species              344 non-null    object \n 3   Region               344 non-null    object \n 4   Island               344 non-null    object \n 5   Stage                344 non-null    object \n 6   Individual ID        344 non-null    object \n 7   Clutch Completion    344 non-null    object \n 8   Date Egg             344 non-null    object \n 9   Culmen Length (mm)   342 non-null    float64\n 10  Culmen Depth (mm)    342 non-null    float64\n 11  Flipper Length (mm)  342 non-null    float64\n 12  Body Mass (g)        342 non-null    float64\n 13  Sex                  333 non-null    object \n 14  Delta 15 N (o/oo)    330 non-null    float64\n 15  Delta 13 C (o/oo)    331 non-null    float64\n 16  Comments             54 non-null     object \ndtypes: float64(6), int64(1), object(10)\nmemory usage: 45.8+ KB\n"}},"pos":9,"type":"cell"}
{"cell_type":"code","exec_count":54,"id":"d8bd7a","input":"len(penguins_dataframe)","output":{"0":{"data":{"text/plain":"344"},"exec_count":54,"output_type":"execute_result"}},"pos":10,"type":"cell"}
{"cell_type":"code","exec_count":55,"id":"2f2080","input":"penguins_dataframe.isnull().sum()","output":{"0":{"data":{"text/plain":"studyName                0\nSample Number            0\nSpecies                  0\nRegion                   0\nIsland                   0\nStage                    0\nIndividual ID            0\nClutch Completion        0\nDate Egg                 0\nCulmen Length (mm)       2\nCulmen Depth (mm)        2\nFlipper Length (mm)      2\nBody Mass (g)            2\nSex                     11\nDelta 15 N (o/oo)       14\nDelta 13 C (o/oo)       13\nComments               290\ndtype: int64"},"exec_count":55,"output_type":"execute_result"}},"pos":11,"type":"cell"}
{"cell_type":"code","exec_count":56,"id":"008d52","input":"#Make a list of what you want to drop\ncolumns_to_drop = ['studyName', 'Comments']\n\n#Drop the columns using drop()\npenguins_dataframe.drop(columns_to_drop, axis=1, inplace = True) #axis = 1 lets pandas know we are dropping columns, not rows.\n\n#Check that they are dropped\npenguins_dataframe.head(1)","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Sample Number</th>\n      <th>Species</th>\n      <th>Region</th>\n      <th>Island</th>\n      <th>Stage</th>\n      <th>Individual ID</th>\n      <th>Clutch Completion</th>\n      <th>Date Egg</th>\n      <th>Culmen Length (mm)</th>\n      <th>Culmen Depth (mm)</th>\n      <th>Flipper Length (mm)</th>\n      <th>Body Mass (g)</th>\n      <th>Sex</th>\n      <th>Delta 15 N (o/oo)</th>\n      <th>Delta 13 C (o/oo)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>Adelie Penguin (Pygoscelis adeliae)</td>\n      <td>Anvers</td>\n      <td>Torgersen</td>\n      <td>Adult, 1 Egg Stage</td>\n      <td>N1A1</td>\n      <td>Yes</td>\n      <td>2007-11-11</td>\n      <td>39.1</td>\n      <td>18.7</td>\n      <td>181.0</td>\n      <td>3750.0</td>\n      <td>MALE</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   Sample Number                              Species  Region     Island  \\\n0              1  Adelie Penguin (Pygoscelis adeliae)  Anvers  Torgersen   \n\n                Stage Individual ID Clutch Completion    Date Egg  \\\n0  Adult, 1 Egg Stage          N1A1               Yes  2007-11-11   \n\n   Culmen Length (mm)  Culmen Depth (mm)  Flipper Length (mm)  Body Mass (g)  \\\n0                39.1               18.7                181.0         3750.0   \n\n    Sex  Delta 15 N (o/oo)  Delta 13 C (o/oo)  \n0  MALE                NaN                NaN  "},"exec_count":56,"output_type":"execute_result"}},"pos":16,"type":"cell"}
{"cell_type":"code","exec_count":57,"id":"681fe8","input":"# Drop the Sample Number, Individual ID, Delta 15 N (o/oo), and Delta 13 C (o/oo) columns using the example above.\n\n#Make a list of what you want to drop\ncolumns_to_drop = ['Sample Number', 'Individual ID', 'Delta 15 N (o/oo)', 'Delta 13 C (o/oo)']\n\n#Drop the columns using drop()\npenguins_dataframe.drop(columns_to_drop, axis=1, inplace = True) #axis = 1 lets pandas know we are dropping columns, not rows.\n\n#Check that they are dropped\npenguins_dataframe.head(1)","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Species</th>\n      <th>Region</th>\n      <th>Island</th>\n      <th>Stage</th>\n      <th>Clutch Completion</th>\n      <th>Date Egg</th>\n      <th>Culmen Length (mm)</th>\n      <th>Culmen Depth (mm)</th>\n      <th>Flipper Length (mm)</th>\n      <th>Body Mass (g)</th>\n      <th>Sex</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Adelie Penguin (Pygoscelis adeliae)</td>\n      <td>Anvers</td>\n      <td>Torgersen</td>\n      <td>Adult, 1 Egg Stage</td>\n      <td>Yes</td>\n      <td>2007-11-11</td>\n      <td>39.1</td>\n      <td>18.7</td>\n      <td>181.0</td>\n      <td>3750.0</td>\n      <td>MALE</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"                               Species  Region     Island               Stage  \\\n0  Adelie Penguin (Pygoscelis adeliae)  Anvers  Torgersen  Adult, 1 Egg Stage   \n\n  Clutch Completion    Date Egg  Culmen Length (mm)  Culmen Depth (mm)  \\\n0               Yes  2007-11-11                39.1               18.7   \n\n   Flipper Length (mm)  Body Mass (g)   Sex  \n0                181.0         3750.0  MALE  "},"exec_count":57,"output_type":"execute_result"}},"pos":18,"type":"cell"}
{"cell_type":"code","exec_count":58,"id":"fbf549","input":"# This is a very convenient function to drop all rows that have N/A values!\npenguins_dataframe.dropna(inplace=True)\npenguins_dataframe.reset_index(drop=True, inplace=True) #Very good practice to reset how your rows are counted when you drop rows.","pos":20,"type":"cell"}
{"cell_type":"code","exec_count":59,"id":"6e0720","input":"#Print the number of rows our new dataframe has.\nlen(penguins_dataframe)","output":{"0":{"data":{"text/plain":"333"},"exec_count":59,"output_type":"execute_result"}},"pos":21,"type":"cell"}
{"cell_type":"code","exec_count":60,"id":"5a63b1","input":"# access a column using df[\"<COLUMN_NAME\"] or df.COLUMN_NAME\npenguins_dataframe[\"Species\"].head()","output":{"0":{"data":{"text/plain":"0    Adelie Penguin (Pygoscelis adeliae)\n1    Adelie Penguin (Pygoscelis adeliae)\n2    Adelie Penguin (Pygoscelis adeliae)\n3    Adelie Penguin (Pygoscelis adeliae)\n4    Adelie Penguin (Pygoscelis adeliae)\nName: Species, dtype: object"},"exec_count":60,"output_type":"execute_result"}},"pos":23,"type":"cell"}
{"cell_type":"code","exec_count":61,"id":"9fc9ba","input":"penguins_dataframe.Species.head()","output":{"0":{"data":{"text/plain":"0    Adelie Penguin (Pygoscelis adeliae)\n1    Adelie Penguin (Pygoscelis adeliae)\n2    Adelie Penguin (Pygoscelis adeliae)\n3    Adelie Penguin (Pygoscelis adeliae)\n4    Adelie Penguin (Pygoscelis adeliae)\nName: Species, dtype: object"},"exec_count":61,"output_type":"execute_result"}},"pos":24,"type":"cell"}
{"cell_type":"code","exec_count":62,"id":"f57409","input":"#You can also access multiple columns using double brackets (printing a \"list\" of columns)\npenguins_dataframe[[\"Species\",\"Region\"]].head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Species</th>\n      <th>Region</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Adelie Penguin (Pygoscelis adeliae)</td>\n      <td>Anvers</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Adelie Penguin (Pygoscelis adeliae)</td>\n      <td>Anvers</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Adelie Penguin (Pygoscelis adeliae)</td>\n      <td>Anvers</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Adelie Penguin (Pygoscelis adeliae)</td>\n      <td>Anvers</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Adelie Penguin (Pygoscelis adeliae)</td>\n      <td>Anvers</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"                               Species  Region\n0  Adelie Penguin (Pygoscelis adeliae)  Anvers\n1  Adelie Penguin (Pygoscelis adeliae)  Anvers\n2  Adelie Penguin (Pygoscelis adeliae)  Anvers\n3  Adelie Penguin (Pygoscelis adeliae)  Anvers\n4  Adelie Penguin (Pygoscelis adeliae)  Anvers"},"exec_count":62,"output_type":"execute_result"}},"pos":25,"type":"cell"}
{"cell_type":"code","exec_count":63,"id":"805518","input":"#Print the last five rows of the Island and Region columns.\npenguins_dataframe[['Island', 'Region']].tail()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Island</th>\n      <th>Region</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>328</th>\n      <td>Dream</td>\n      <td>Anvers</td>\n    </tr>\n    <tr>\n      <th>329</th>\n      <td>Dream</td>\n      <td>Anvers</td>\n    </tr>\n    <tr>\n      <th>330</th>\n      <td>Dream</td>\n      <td>Anvers</td>\n    </tr>\n    <tr>\n      <th>331</th>\n      <td>Dream</td>\n      <td>Anvers</td>\n    </tr>\n    <tr>\n      <th>332</th>\n      <td>Dream</td>\n      <td>Anvers</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"    Island  Region\n328  Dream  Anvers\n329  Dream  Anvers\n330  Dream  Anvers\n331  Dream  Anvers\n332  Dream  Anvers"},"exec_count":63,"output_type":"execute_result"}},"pos":27,"type":"cell"}
{"cell_type":"code","exec_count":64,"id":"eeaf10","input":"len(penguins_dataframe[penguins_dataframe[\"Species\"] == \"Adelie Penguin (Pygoscelis adeliae)\"])","output":{"0":{"data":{"text/plain":"146"},"exec_count":64,"output_type":"execute_result"}},"pos":29,"type":"cell"}
{"cell_type":"code","exec_count":67,"id":"46749f","input":"#Create a histogram of another column of your choice below.\n","pos":40,"type":"cell"}
{"cell_type":"code","exec_count":70,"id":"ae90d0","input":"import plotly.express as px #importing plotly","pos":45,"type":"cell"}
{"cell_type":"code","exec_count":73,"id":"dd1b38","input":"# My scatter matrix!\nnumerical_penguins_df = penguins_dataframe[['Culmen Length (mm)', 'Culmen Depth (mm)', 'Flipper Length (mm)',\n       'Body Mass (g)']]\nfig = px.scatter_matrix(numerical_penguins_df)\nfig.show()","output":{"0":{"data":{"iframe":"2ee37f1970c568ce4c646ab59cdcacd3807d66e7"},"exec_count":73,"output_type":"execute_result"}},"pos":51,"type":"cell"}
{"cell_type":"code","exec_count":74,"id":"8ded7a","input":"#Continue your analysis below -- try something new!","pos":53,"type":"cell"}
{"cell_type":"code","exec_count":75,"id":"8c1d3e","input":"#Continue your analysis","pos":54,"type":"cell"}
{"cell_type":"code","exec_count":76,"id":"6a760c","input":"# Use pandas to find out which species of penguin can have a flipper length greater than or equal to 230\nlen(penguins_dataframe[penguins_dataframe[\"Flipper Length (mm)\"] >= 230])","output":{"0":{"data":{"text/plain":"8"},"exec_count":76,"output_type":"execute_result"}},"pos":31,"type":"cell"}
{"cell_type":"code","exec_count":77,"id":"136c92","input":"min(penguins_dataframe[\"Flipper Length (mm)\"])","output":{"0":{"data":{"text/plain":"172.0"},"exec_count":77,"output_type":"execute_result"}},"pos":33,"type":"cell"}
{"cell_type":"code","exec_count":78,"id":"e7f70e","input":"min(penguins_dataframe[\"Culmen Length (mm)\"])","output":{"0":{"data":{"text/plain":"32.1"},"exec_count":78,"output_type":"execute_result"}},"pos":34,"type":"cell"}
{"cell_type":"code","exec_count":79,"id":"398d1c","input":"max(penguins_dataframe['Body Mass (g)'])","output":{"0":{"data":{"text/plain":"6300.0"},"exec_count":79,"output_type":"execute_result"}},"pos":35,"type":"cell"}
{"cell_type":"code","exec_count":80,"id":"4ce968","input":"penguins_dataframe.describe()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Culmen Length (mm)</th>\n      <th>Culmen Depth (mm)</th>\n      <th>Flipper Length (mm)</th>\n      <th>Body Mass (g)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>333.000000</td>\n      <td>333.000000</td>\n      <td>333.000000</td>\n      <td>333.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>43.992793</td>\n      <td>17.164865</td>\n      <td>200.966967</td>\n      <td>4207.057057</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>5.468668</td>\n      <td>1.969235</td>\n      <td>14.015765</td>\n      <td>805.215802</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>32.100000</td>\n      <td>13.100000</td>\n      <td>172.000000</td>\n      <td>2700.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>39.500000</td>\n      <td>15.600000</td>\n      <td>190.000000</td>\n      <td>3550.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>44.500000</td>\n      <td>17.300000</td>\n      <td>197.000000</td>\n      <td>4050.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>48.600000</td>\n      <td>18.700000</td>\n      <td>213.000000</td>\n      <td>4775.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>59.600000</td>\n      <td>21.500000</td>\n      <td>231.000000</td>\n      <td>6300.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"       Culmen Length (mm)  Culmen Depth (mm)  Flipper Length (mm)  \\\ncount          333.000000         333.000000           333.000000   \nmean            43.992793          17.164865           200.966967   \nstd              5.468668           1.969235            14.015765   \nmin             32.100000          13.100000           172.000000   \n25%             39.500000          15.600000           190.000000   \n50%             44.500000          17.300000           197.000000   \n75%             48.600000          18.700000           213.000000   \nmax             59.600000          21.500000           231.000000   \n\n       Body Mass (g)  \ncount     333.000000  \nmean     4207.057057  \nstd       805.215802  \nmin      2700.000000  \n25%      3550.000000  \n50%      4050.000000  \n75%      4775.000000  \nmax      6300.000000  "},"exec_count":80,"output_type":"execute_result"}},"pos":36,"type":"cell"}
{"cell_type":"code","exec_count":81,"id":"d7c346","input":"# Create a histogram of a column's data using the df.hist() function. I found it here: https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.hist.html\npenguins_dataframe.hist()","output":{"0":{"data":{"text/plain":"array([[<matplotlib.axes._subplots.AxesSubplot object at 0x7f7f7d5e1e20>,\n        <matplotlib.axes._subplots.AxesSubplot object at 0x7f7f7d5a99a0>],\n       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f7f7d561280>,\n        <matplotlib.axes._subplots.AxesSubplot object at 0x7f7f7d507ac0>]],\n      dtype=object)"},"exec_count":81,"output_type":"execute_result"},"1":{"data":{"image/png":"cc28e07ba3c045f64ee268623532181fe19793ce","text/plain":"<Figure size 864x504 with 4 Axes>"},"exec_count":81,"metadata":{"image/png":{"height":426,"width":703},"needs_background":"light"},"output_type":"execute_result"}},"pos":38,"type":"cell"}
{"cell_type":"code","exec_count":83,"id":"549565","input":"#Create a pie plot here - might look more like art than data science. Is a pie chart a good choice for the column?\n#df['column_name'].plot.pie()\npenguins_dataframe['Culmen Length (mm)'].plot.pie(figsize=(6, 6))","output":{"0":{"data":{"text/plain":"<matplotlib.axes._subplots.AxesSubplot at 0x7f7f7cd44d60>"},"exec_count":83,"output_type":"execute_result"},"1":{"data":{"image/png":"c077c4ba6bed3e2f45f477f2880a0d556aa72a73","text/plain":"<Figure size 432x432 with 1 Axes>"},"exec_count":83,"metadata":{"image/png":{"height":340,"width":354}},"output_type":"execute_result"}},"pos":43,"type":"cell"}
{"cell_type":"code","exec_count":84,"id":"74b59a","input":"#Create a scatter here\n#df.plot.scatter(x = '', y = '')\npenguins_dataframe.plot.scatter(x='Culmen Length (mm)', y='Culmen Depth (mm)')","output":{"0":{"data":{"text/plain":"<matplotlib.axes._subplots.AxesSubplot at 0x7f7f7cdaaa90>"},"exec_count":84,"output_type":"execute_result"},"1":{"data":{"image/png":"7baae2a5d36eb01fccfe059cc40f8c250966950b","text/plain":"<Figure size 864x504 with 1 Axes>"},"exec_count":84,"metadata":{"image/png":{"height":424,"width":717},"needs_background":"light"},"output_type":"execute_result"}},"pos":42,"type":"cell"}
{"cell_type":"code","exec_count":85,"id":"c53dae","input":"# Create the same scatter plot with color=\"Species\". Feeling crazy? Set a column name to the \"size\" argument as well!\nfig2 = px.scatter(penguins_dataframe, x='Culmen Length (mm)', y='Culmen Depth (mm)', color=\"Species\",\n                 size='Flipper Length (mm)', title=\"Culmen Length vs Depth in Penguin Species\")\nfig2.show()","output":{"0":{"data":{"iframe":"0d27d54a6fe630d1914a8cdd6dedbf9e218e2d8c"},"exec_count":85,"output_type":"execute_result"}},"pos":49,"type":"cell"}
{"cell_type":"code","exec_count":86,"id":"363627","input":"# Create a scatter plot\nfig1 = px.scatter(penguins_dataframe, x='Culmen Length (mm)', y='Culmen Depth (mm)', title=\"Culmen Length vs Depth in Penguin Species\")\nfig1.show()","output":{"0":{"data":{"iframe":"819a0eadbb7346c5b07d30fc1f6e640dd51276a8"},"exec_count":86,"output_type":"execute_result"}},"pos":47,"type":"cell"}
{"cell_type":"markdown","id":"235cdc","input":"**TODO:** Now, let's have some fun. Can you create plots using the following functions?\n\n1. Scatter Plot: [https://pandas.pydata.org/pandas\\-docs/version/0.25.0/reference/api/pandas.DataFrame.plot.scatter.html](https://pandas.pydata.org/pandas-docs/version/0.25.0/reference/api/pandas.DataFrame.plot.scatter.html)\n2. Pie Plot: [https://pandas.pydata.org/docs/user\\_guide/visualization.html\\#visualization\\-pie](https://pandas.pydata.org/docs/user_guide/visualization.html#visualization-pie)\n\nPro challenge: Add a title to each!\n\n","pos":41,"type":"cell"}
{"cell_type":"markdown","id":"2acd7e","input":"**TODO:** Let's make it look even better. Copy your function from above but add another argument to the function by setting the `color=\"Species\"`. Not sure what this means? Get to the scatter plots page on plotly and scroll down to the \"Setting size and color with column names\" section.\n\n","pos":48,"type":"cell"}
{"cell_type":"markdown","id":"2ef91c","input":"### Visualize on the Fly with Pandas\n\nBefore we create mind\\-blowing visualizations, it is sometimes worth it to create quick visualizations to get ourselves oriented with the data and it's underlying patterns. \n\nI put a simple histogram below that helps me understand how the dataset is distributed. Notice that is is pretty hard to read and ugly, but it gets the job done for the data scientist. I now know that there are three species of penguin we are worried about, and that we have a lot more samples of the Adelie penguin than the Gentoo and Chinstrap \\(a good to know for machine learning\\). \n\n","pos":37,"type":"cell"}
{"cell_type":"markdown","id":"33e382","input":"Thank you!\n\n","pos":56,"type":"cell"}
{"cell_type":"markdown","id":"3913d9","input":"### Step 2: Do your research\n\nWhat do the column names mean? At this point you should look up the meanings of any columns you don't know about and make some comments below. \n\nTypically at this point we would read up on the domain we are performing data analysis on. To do research on penguins you should probably get to know something about penguins!\n","pos":13,"type":"cell"}
{"cell_type":"markdown","id":"3e60cf","input":"### Step 1: Loading in and understanding our data\n\nWe need to read in our data. It is currently a .csv \\(comma\\-separated value\\) file, and we generally use the pd.read\\_csv\\(\\) function from pandas to read our data into a dataframe. \n\n","pos":3,"type":"cell"}
{"cell_type":"markdown","id":"5d1757","input":"**TODO:** Take 5 minutes to explore the dataset on your own. There's some space for you to code below.\n\nThink of what you want to learn. Maybe what the smallest flipper size penguin is? How about the smallest culmen width? What is the largest penguin by mass?\n","pos":32,"type":"cell"}
{"cell_type":"markdown","id":"73b506","input":"### Step 3: Cleaning up our Data\n\nThis data is a lot to take in. How do we know if we can even use this data? I see some weird columns and lots of N/A values.\n\nLet's talk through some functions to clean our data and see if it is salvagable. To start, we cannot use all of these columns. I'm thinking I want to get rid of \"studyName\" and \"Comments\" since they are not super useful for understanding the data relationships. I'll do that below. \n","pos":15,"type":"cell"}
{"cell_type":"markdown","id":"8d4ff1","input":"**TODO: Create a histogram of another column of your choice below.**\n","pos":39,"type":"cell"}
{"cell_type":"markdown","id":"8e399d","input":"#### Getting Rid of N/A's\n\nI see lots of N/A's, which we typically cannot visualize or use in machine learning.\nNow, I want to get rid of all the rows that have NA's in them. I'll show you how. **TODO:** Can you print the number of rows our dataframe has after I drop the NAs?\n","pos":19,"type":"cell"}
{"cell_type":"markdown","id":"901a7e","input":"# Welcome to your first EDA \\(Exploratory Data Analysis\\)\n\n","pos":0,"type":"cell"}
{"cell_type":"markdown","id":"96f1a7","input":"### Putting the DA in EDA\n\nWe now have explored our data some, and have built some beautiful visualizations to showcase patterns our data. But having a plot doesn't mean anything to someone who can't understand how to read plots.\n\nBelow you can continue your analysis if you have hypotheses you'd like to explore with the penguins \\(i.e. is flipper length related to culmen depth? Which species has the largest culmen area?\\). After you are done, please write up some descriptions for your findings on this dataset. One question we answered earlier was _which species has the largest flipper length?_ You can start with you\n\n","pos":52,"type":"cell"}
{"cell_type":"markdown","id":"9752f5","input":"### Creating Beautiful Visualizations with Plotly\n\nSo far, it looks like a scatter plot might be our best bet! Now we want to make a beautiful scatter plot using `plotly.`Just like pandas and numpy, plotly is a module that lets us create beautiful visualizations in just a few lines of code. \n\nI'm only going to help with the import, so I need you to spend time on plotly's documentation in order to build the same scatter plot you did in the last section, but nicer. Maybe google \"Scatter plots in plotly python\" to start!\n\n","pos":44,"type":"cell"}
{"cell_type":"markdown","id":"98c47c","input":"**TODO:** Can you run the .head\\(\\) and .tail\\(\\) function on our new dataframe? Can you print the name of all the columns in our dataframe? How about the number of rows?\n\n","pos":5,"type":"cell"}
{"cell_type":"markdown","id":"9c36b8","input":"**TODO: Can you print the last five rows of the Island and Region columns?** \n\n","pos":26,"type":"cell"}
{"cell_type":"markdown","id":"9fe36a","input":"**Scatter Matrix:** I wanted to create a scatter plot for every possible numerical combination of 'Culmen Length \\(mm\\)', 'Culmen Depth \\(mm\\)', 'Flipper Length \\(mm\\)', and 'Body Mass \\(g\\)'. This could help me understand what is correlated and could mean a relationship between each other. The code to do so is below; are there any findings you can take away from this data?\n\n","pos":50,"type":"cell"}
{"cell_type":"markdown","id":"a2bc23","input":"**TODO:** Create a scatter plot using plotly. Please add a title here!\n\nMaybe google \"Scatter plots in plotly python\" to start!\n\n","pos":46,"type":"cell"}
{"cell_type":"markdown","id":"b8ff4e","input":"### Exploring the Data\n\nPandas has some amazing tools for exploring your data. Since this is a **mini** project, we will walk through only a few key features of pandas exploration. You can expect to do lots of research on your own to best explore, clean, and visualize your data for your project. \n\nFirst we will learn how to access certain columns of data and use conditions to get subsets of data.\n\n","pos":22,"type":"cell"}
{"cell_type":"markdown","id":"d3a0e2","input":"<u>**Conditions in Pandas**</u>\n\nPandas is also incredible for selecting subsets of columns that fit a certain condition. Check out the code below to get only the Adelie penguins.\n\n","pos":28,"type":"cell"}
{"cell_type":"markdown","id":"d4fbff","input":"### Our task at hand \\-\\- I hope you like penguins!\n\nFor our mini project, we are going to use Pandas and Numpy to conduct a basic Exploratory Data Analysis on a penguins dataset. Specifically, we are looking at the <u>Palmer Archipelago \\(Antarctica\\) Penguins</u> dataset, which you can find here:  [https://raw.githubusercontent.com/mcnakhaee/palmerpenguins/master/palmerpenguins/data/penguins\\-raw.csv](https://raw.githubusercontent.com/mcnakhaee/palmerpenguins/master/palmerpenguins/data/penguins-raw.csv)\n\nNot sure what an exploratory data analysis is? You can google it! The best definition I found is below:\n\n_**Exploratory Data Analysis**_ **refers to the critical process of performing initial investigations on data so as to discover patterns, to spot anomalies, to test hypotheses and to check assumptions with the help of summary statistics and graphical representations.**\n\n","pos":1,"type":"cell"}
{"cell_type":"markdown","id":"e4b9f5","input":"Conditions in pandas work just like `if` statements in python. \n\n**TODO: Can you tell me which species of penguin can have a flipper length greater than or equal to 230 by using conditions in pandas?**\n\n","pos":30,"type":"cell"}
{"cell_type":"markdown","id":"fa0d53","input":"**What does inplace mean?** This argument in the `drop()` function means we are changing the dataframe in place! If we had `inplace = False`, we would need to create a new dataframe like so: \n\n`new_penguins_dataframe = penguins_dataframe.drop(columns_to_drop, axis=1, inplace = False)`\n\n**TODO:** Can you drop the Sample Number, Individual ID, Delta 15 N \\(o/oo\\), and Delta 13 C \\(o/oo\\) columns using the example above?\n\n","pos":17,"type":"cell"}
{"cell_type":"raw","id":"7c8669","input":"Write up some descriptions for your findings here....\n\n\n\n\n","pos":55,"type":"cell"}
{"cell_type":"raw","id":"bac6ba","input":"What do these columns mean?\n\n\n\n\n\n\n","pos":14,"type":"cell"}
{"id":0,"time":1658326947077,"type":"user"}
{"last_load":1658326946885,"type":"file"}