{"backend_state":"running","connection_file":"/projects/7c08c135-501d-4a5d-8ef1-fb9399dd6cfe/.local/share/jupyter/runtime/kernel-8340fecd-a437-4fbb-9c28-c868e2c3dbca.json","kernel":"elastic-searchers","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.9.12"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1659021933900,"id":"20b260","input":"# use .head() .info() and similar functions to get an overview of the data","kernel":"elastic-searchers","pos":5,"start":1659021933900,"state":"done","type":"cell"}
{"cell_type":"code","end":1659021933900,"id":"64b671","input":"pd.read_csv('./archive/CO2 Emissions_Canada.csv').describe()","kernel":"elastic-searchers","pos":7,"start":1659021933900,"state":"done","type":"cell"}
{"cell_type":"code","end":1659021933900,"id":"9784c9","input":"pd.read_csv('./archive/CO2 Emissions_Canada.csv').head()","kernel":"elastic-searchers","pos":6,"start":1659021933900,"state":"done","type":"cell"}
{"cell_type":"code","end":1659021933900,"id":"e54fc3","input":"pd.read_csv('./archive/CO2 Emissions_Canada.csv').tail()","kernel":"elastic-searchers","pos":8,"start":1659021933900,"state":"done","type":"cell"}
{"cell_type":"code","end":1659021933901,"id":"3f113e","input":"len('./archive/CO2 Emissions_Canada.csv')","kernel":"elastic-searchers","pos":9,"start":1659021933901,"state":"done","type":"cell"}
{"cell_type":"code","end":1659021933901,"id":"b4045c","input":"pd.read_csv('./archive/CO2 Emissions_Canada.csv').isnull()","kernel":"elastic-searchers","pos":11,"start":1659021933901,"state":"done","type":"cell"}
{"cell_type":"code","end":1659021933901,"id":"ecad12","input":"# Check null values","kernel":"elastic-searchers","pos":10,"start":1659021933901,"state":"done","type":"cell"}
{"cell_type":"code","end":1659021933902,"id":"47aca0","input":"df.isna().sum()","kernel":"elastic-searchers","pos":13,"start":1659021933902,"state":"done","type":"cell"}
{"cell_type":"code","end":1659021933902,"id":"7566b3","input":"drop_columns = ['Transmission', 'Fuel Consumption City (L/100 km)', 'Fuel Consumption Hwy (L/100 km)', 'Fuel Consumption Comb (L/100 km)']\ndf.drop(drop_columns, axis=1, inplace=True)\ndf.head()","kernel":"elastic-searchers","pos":12,"start":1659021933902,"state":"done","type":"cell"}
{"cell_type":"code","end":1659021933902,"id":"9a90fb","input":"# create plots for your data to understand the trend of data :D","kernel":"elastic-searchers","pos":15,"start":1659021933902,"state":"done","type":"cell"}
{"cell_type":"code","end":1659021933903,"id":"3c81c7","input":"fig = px.scatter(df, x=\"Model\", y=\"CO2 Emissions(g/km)\", color=\"Fuel Type\", size= 'Engine Size(L)', title='CO2 Emissions by Model')\nfig.show()\n# The x-axis shows model and the y-axis shows CO2 emissions for the corresponding models. There is no direct correlation, but fuel type Z and X are most common with the higher emission rates.","kernel":"elastic-searchers","pos":17,"start":1659021933903,"state":"done","type":"cell"}
{"cell_type":"code","end":1659021933904,"id":"ac7aec","input":"# handle missing data or convert categorical data into dummy variables","kernel":"elastic-searchers","pos":22,"start":1659021933904,"state":"done","type":"cell"}
{"cell_type":"code","end":1659021933904,"id":"d535d5","input":"# Only shows vehicles using regular gasoline (D on graph)\ndfd = df[df[\"Fuel Type\"] == \"D\"]\ndfd","kernel":"elastic-searchers","pos":23,"start":1659021933904,"state":"done","type":"cell"}
{"cell_type":"code","end":1659021933904,"id":"d9912b","input":"# Only shows vehicles using premium gasoline (Z on graph)\ndfz = df[df[\"Fuel Type\"] == \"Z\"]\ndfz","kernel":"elastic-searchers","pos":24,"start":1659021933904,"state":"done","type":"cell"}
{"cell_type":"code","end":1659021933905,"id":"064cc6","input":"from sklearn.model_selection import train_test_split\ncol_category = ['Make', 'Model', 'Vehicle Class', 'Fuel Type']\nfor col in col_category:\n    df = pd.concat([df.drop(col, axis=1), pd.get_dummies(df[col], prefix=col, prefix_sep='_')], axis=1)\n# define the input_columns and target variables\ninput_columns = df.loc[:, df.columns != \"CO2 Emissions(g/km)\"]\ntarget = target = df[\"CO2 Emissions(g/km)\"]\nx_train, x_test, y_train, y_test = train_test_split(input_columns, target, test_size=0.2)","kernel":"elastic-searchers","pos":27,"start":1659021933905,"state":"done","type":"cell"}
{"cell_type":"code","end":1659021933905,"id":"4476ad","input":"import pandas as pd\nimport plotly.express as px\nimport numpy as np\nfrom matplotlib import pyplot as plt\nfrom sklearn.model_selection import GridSearchCV","kernel":"elastic-searchers","pos":26,"start":1659021933905,"state":"done","type":"cell"}
{"cell_type":"code","end":1659021933905,"id":"9c5600","input":"df.columns","kernel":"elastic-searchers","pos":28,"start":1659021933905,"state":"done","type":"cell"}
{"cell_type":"code","end":1659021933906,"id":"b29ecf","input":"# https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.Ridge.html\ngrid_params_ridge = { 'alpha' : [2,5],\n                    'fit_intercept' : [True, False],\n                    'normalize' : [True, False]}\ngs_ridge = GridSearchCV(RidgeCV(), grid_params_ridge)\ngs_ridge_res = gs_ridge.fit(x_train, y_train)\nprint(gs_ridge_res.best_params_)","kernel":"elastic-searchers","pos":32,"start":1659021933906,"state":"done","type":"cell"}
{"cell_type":"code","end":1659022027646,"exec_count":27,"id":"704a50","input":"# Load dataset hint: pd.read_csv()\n#the file? oh your code!\ndf = pd.read_csv('./archive/CO2 Emissions_Canada.csv')","kernel":"elastic-searchers","pos":4,"start":1659022027627,"state":"done","type":"cell"}
{"cell_type":"code","end":1659022034131,"exec_count":28,"id":"17c7f4","input":"fig = px.scatter(df, x=\"Vehicle Class\", y=\"CO2 Emissions(g/km)\", color=\"Fuel Type\", size= 'Engine Size(L)', title='CO2 Emissions by Vehicle')\nfig.show()\n# The x-axis shows vehicle class and the y-axis shows CO2 emissions for the corresponding classes. There is no direct correlation between the values, but two-seater cars tend to have higher than average emission rates.","kernel":"elastic-searchers","output":{"0":{"data":{"iframe":"56416e6291cf929e407ccf09362a2f46f952aa78"}}},"pos":16,"start":1659022033781,"state":"done","type":"cell"}
{"cell_type":"code","end":1659022290813,"exec_count":37,"id":"78b01d","input":"fig = px.scatter(df, x=\"Fuel Consumption Comb (mpg)\", y=\"CO2 Emissions(g/km)\", color=\"Fuel Type\", size= 'Engine Size(L)', title='Fuel Consumption Combined and CO2 Emission Correlation')\nfig.show()\n# The x-axis shows fuel consumption and the y-axis shows CO2 emissions for the corresponding fuel consumption rates. There is a negative correlation between the axes which suggests that overall more fuel consumption leads to less emissions.","kernel":"elastic-searchers","output":{"0":{"data":{"iframe":"1e6a57a7d6d75afbe56cbecda9bb3e1c3d366300"}}},"pos":19,"start":1659022290604,"state":"done","type":"cell"}
{"cell_type":"code","end":1659023128787,"exec_count":40,"id":"4bf138","input":"fig = px.box(df, x=\"Cylinders\", y=\"CO2 Emissions(g/km)\", title='Cylinders and CO2 Emission Relations')\nfig.show()\n# The x-axis shows cylinders and the y-axis shows CO2 emissions for the corresponding cylinders. The trends show that the greater the number of cylinders, the more the emissions.","kernel":"elastic-searchers","output":{"0":{"data":{"iframe":"70173cbb37fcc57fb1c2af30e2212f979d4f4fa0"}}},"pos":20,"scrolled":false,"start":1659023128582,"state":"done","type":"cell"}
{"cell_type":"code","end":1659023338211,"exec_count":41,"id":"296993","input":"#yukta\nimport pandas as pd\nfrom numpy import arange\nfrom sklearn.linear_model import Ridge\nfrom sklearn.linear_model import RidgeCV\nfrom sklearn.model_selection import RepeatedKFold\n\n\n# i think we need to enter values greater than 0.0 for the alpha\n# https://www.statology.org/ridge-regression-in-python/ \n\n\n#data = pd.read_csv(\"CO2 Emissions_Canada.csv\")\n#X=data[\"Make\",\"Model\",\"Vehicle Class\",\"Engine Size(L)\",\"Cylinders,Transmission\",\"Fuel Type\",\"Fuel Consumption City (L/100 km)\",\"Fuel Consumption Hwy (L/100 km)\",\"Fuel #Consumption Comb (L/100 km)\",\"Fuel Consumption Comb (mpg)\"]\n#Y=data[\"CO2 Emissions(g/km)\"]\n\n\n#x_train, x_test, y_train, y_test\n# cv = RepeatedKFold(n_splits=10, n_repeats=3, random_state=1)\nridge = RidgeCV(alphas=arange(0.00001, 1, 0.01))\nridge.fit(x_train, y_train)\nprint(ridge.alpha_)","kernel":"elastic-searchers","output":{"0":{"name":"stdout","text":"0.17001000000000002\n"}},"pos":29,"start":1659023285418,"state":"done","type":"cell"}
{"cell_type":"code","end":1659023356413,"exec_count":42,"id":"575fcd","input":"y_hat = ridge.predict(x_test)","kernel":"elastic-searchers","pos":30,"start":1659023356305,"state":"done","type":"cell"}
{"cell_type":"code","end":1659023360445,"exec_count":43,"id":"4c1096","input":"ridge.score(x_test, y_test)\ntotal_squared_error = (np.sum((y_test - y_hat)**2)) #get the sum of all the errors (error = what we want (y_test) - what we predicted (y_hat))\nmean_squared_error = total_squared_error/len(y_test) #divide this by how many rows/observations we have \nprint(mean_squared_error)\n#normalized root mean squared error: https://www.statology.org/what-is-a-good-rmse/\n","kernel":"elastic-searchers","output":{"0":{"name":"stdout","text":"58.681406212856565\n"}},"pos":31,"start":1659023360313,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":36,"id":"663b68","input":"fig = px.box(df, x=\"Vehicle Class\", y=\"Cylinders\", title='Vehicle Class and Cylinders')\nfig.show()\n# The x-axis shows vehicle class and the y-axis shows cylinders for the corresponding classes. There is no direct correlation between the values, since it is a box plot. Two-seaters tend to have the most cylinders - the area where fuel is combusted and energy is made.","kernel":"elastic-searchers","output":{"0":{"data":{"iframe":"8e4d92396f8ac504d06b30aabd327db7c81c0508"}}},"pos":18,"state":"done","type":"cell"}
{"cell_type":"code","id":"5a31a8","input":"import pandas as pd\nimport plotly.express as px","kernel":"elastic-searchers","pos":1,"start":1659021933878,"state":"busy","type":"cell"}
{"cell_type":"code","id":"d81d9e","input":"","pos":33,"type":"cell"}
{"cell_type":"code","id":"fcd488","input":"","pos":25,"type":"cell"}
{"cell_type":"markdown","id":"081ec2","input":"### Exploratory Data Analysis","pos":14,"type":"cell"}
{"cell_type":"markdown","id":"4356be","input":"### Import Packages\n\n","pos":0,"type":"cell"}
{"cell_type":"markdown","id":"48a089","input":"### Data Overview\n\n","pos":2,"type":"cell"}
{"cell_type":"markdown","id":"d39882","input":"Data source: Kaggle\n\n","pos":3,"type":"cell"}
{"cell_type":"markdown","id":"dbc566","input":"### Data Cleaning\n\n","pos":21,"type":"cell"}
{"end":1659023480708,"exec_count":45,"id":"586031","input":"from sklearn.metrics import mean_squared_error\n\nrmse=mean_squared_error(y_test, y_hat, squared=False)\nprint(rmse)\nnorm=rmse/(max(df['CO2 Emissions(g/km)'])-min(df['CO2 Emissions(g/km)']))\nprint(norm)","kernel":"elastic-searchers","output":{"0":{"name":"stdout","text":"7.660378986241906\n0.0179821102963425\n"}},"pos":31.5,"start":1659023480701,"state":"done","type":"cell"}
{"id":0,"time":1659022877743,"type":"user"}
{"last_load":1658969408611,"type":"file"}