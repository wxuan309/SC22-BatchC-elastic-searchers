{"backend_state":"init","connection_file":"/projects/7c08c135-501d-4a5d-8ef1-fb9399dd6cfe/.local/share/jupyter/runtime/kernel-2f29e732-a43c-4412-81d1-c849c9509a91.json","kernel":"elastic-searchers","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.9.12"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"0a450c","input":"df.replace(to_replace= 'Z', value= 'Premium gasoline', inplace = True)\ndf.replace(to_replace= 'X', value= 'Gasoline' , inplace= True)\ndf.replace(to_replace= 'D', value= 'Diesel' , inplace= True)\ndf.replace(to_replace= 'E', value= 'Ethanol' , inplace= True)\ndf.replace(to_replace= 'N', value= 'Natural gas' , inplace= True)","pos":24,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"22d370","input":"# Check null values","pos":9,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"3b1211","input":"# use .head() .info() and similar functions to get an overview of the data","pos":5,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"5528e0","input":"","pos":28,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"728d3a","input":"# handle missing data or convert categorical data into dummy variables","pos":23,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"7e3467","input":"","pos":29,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"9212d3","input":"","pos":31,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"b9dced","input":"# create plots for your data to understand the trend of data :D","pos":16,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"ded283","input":"","pos":30,"type":"cell"}
{"cell_type":"code","exec_count":10,"id":"62c026","input":"df.info()","output":{"0":{"name":"stdout","output_type":"stream","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 7385 entries, 0 to 7384\nData columns (total 12 columns):\n #   Column                            Non-Null Count  Dtype  \n---  ------                            --------------  -----  \n 0   Make                              7385 non-null   object \n 1   Model                             7385 non-null   object \n 2   Vehicle Class                     7385 non-null   object \n 3   Engine Size(L)                    7385 non-null   float64\n 4   Cylinders                         7385 non-null   int64  \n 5   Transmission                      7385 non-null   object \n 6   Fuel Type                         7385 non-null   object \n 7   Fuel Consumption City (L/100 km)  7385 non-null   float64\n 8   Fuel Consumption Hwy (L/100 km)   7385 non-null   float64\n 9   Fuel Consumption Comb (L/100 km)  7385 non-null   float64\n 10  Fuel Consumption Comb (mpg)       7385 non-null   int64  \n 11  CO2 Emissions(g/km)               7385 non-null   int64  \ndtypes: float64(4), int64(3), object(5)\nmemory usage: 692.5+ KB\n"}},"pos":8,"type":"cell"}
{"cell_type":"code","exec_count":11,"id":"723446","input":"df.describe()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Engine Size(L)</th>\n      <th>Cylinders</th>\n      <th>Fuel Consumption City (L/100 km)</th>\n      <th>Fuel Consumption Hwy (L/100 km)</th>\n      <th>Fuel Consumption Comb (L/100 km)</th>\n      <th>Fuel Consumption Comb (mpg)</th>\n      <th>CO2 Emissions(g/km)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>7385.000000</td>\n      <td>7385.000000</td>\n      <td>7385.000000</td>\n      <td>7385.000000</td>\n      <td>7385.000000</td>\n      <td>7385.000000</td>\n      <td>7385.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>3.160068</td>\n      <td>5.615030</td>\n      <td>12.556534</td>\n      <td>9.041706</td>\n      <td>10.975071</td>\n      <td>27.481652</td>\n      <td>250.584699</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>1.354170</td>\n      <td>1.828307</td>\n      <td>3.500274</td>\n      <td>2.224456</td>\n      <td>2.892506</td>\n      <td>7.231879</td>\n      <td>58.512679</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>0.900000</td>\n      <td>3.000000</td>\n      <td>4.200000</td>\n      <td>4.000000</td>\n      <td>4.100000</td>\n      <td>11.000000</td>\n      <td>96.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>2.000000</td>\n      <td>4.000000</td>\n      <td>10.100000</td>\n      <td>7.500000</td>\n      <td>8.900000</td>\n      <td>22.000000</td>\n      <td>208.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>3.000000</td>\n      <td>6.000000</td>\n      <td>12.100000</td>\n      <td>8.700000</td>\n      <td>10.600000</td>\n      <td>27.000000</td>\n      <td>246.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>3.700000</td>\n      <td>6.000000</td>\n      <td>14.600000</td>\n      <td>10.200000</td>\n      <td>12.600000</td>\n      <td>32.000000</td>\n      <td>288.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>8.400000</td>\n      <td>16.000000</td>\n      <td>30.600000</td>\n      <td>20.600000</td>\n      <td>26.100000</td>\n      <td>69.000000</td>\n      <td>522.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"       Engine Size(L)    Cylinders  Fuel Consumption City (L/100 km)  \\\ncount     7385.000000  7385.000000                       7385.000000   \nmean         3.160068     5.615030                         12.556534   \nstd          1.354170     1.828307                          3.500274   \nmin          0.900000     3.000000                          4.200000   \n25%          2.000000     4.000000                         10.100000   \n50%          3.000000     6.000000                         12.100000   \n75%          3.700000     6.000000                         14.600000   \nmax          8.400000    16.000000                         30.600000   \n\n       Fuel Consumption Hwy (L/100 km)  Fuel Consumption Comb (L/100 km)  \\\ncount                      7385.000000                       7385.000000   \nmean                          9.041706                         10.975071   \nstd                           2.224456                          2.892506   \nmin                           4.000000                          4.100000   \n25%                           7.500000                          8.900000   \n50%                           8.700000                         10.600000   \n75%                          10.200000                         12.600000   \nmax                          20.600000                         26.100000   \n\n       Fuel Consumption Comb (mpg)  CO2 Emissions(g/km)  \ncount                  7385.000000          7385.000000  \nmean                     27.481652           250.584699  \nstd                       7.231879            58.512679  \nmin                      11.000000            96.000000  \n25%                      22.000000           208.000000  \n50%                      27.000000           246.000000  \n75%                      32.000000           288.000000  \nmax                      69.000000           522.000000  "},"exec_count":11,"output_type":"execute_result"}},"pos":7,"type":"cell"}
{"cell_type":"code","exec_count":12,"id":"324850","input":"df.isnull().sum()","output":{"0":{"data":{"text/plain":"Make                                0\nModel                               0\nVehicle Class                       0\nEngine Size(L)                      0\nCylinders                           0\nTransmission                        0\nFuel Type                           0\nFuel Consumption City (L/100 km)    0\nFuel Consumption Hwy (L/100 km)     0\nFuel Consumption Comb (L/100 km)    0\nFuel Consumption Comb (mpg)         0\nCO2 Emissions(g/km)                 0\ndtype: int64"},"exec_count":12,"output_type":"execute_result"}},"pos":10,"type":"cell"}
{"cell_type":"code","exec_count":13,"id":"b07db1","input":"len(df)","output":{"0":{"data":{"text/plain":"7385"},"exec_count":13,"output_type":"execute_result"}},"pos":11,"type":"cell"}
{"cell_type":"code","exec_count":14,"id":"d6db6a","input":"drop_columns = ['Transmission' , 'Fuel Consumption City (L/100 km)' , 'Fuel Consumption Hwy (L/100 km)' , 'Fuel Consumption Comb (L/100 km)']","pos":12,"type":"cell"}
{"cell_type":"code","exec_count":16,"id":"113670","input":"df.drop(drop_columns, axis=1, inplace = True)","pos":13,"type":"cell"}
{"cell_type":"code","exec_count":18,"id":"26fca2","input":"fig = px.scatter(df, x=\"Vehicle Class\", y=\"CO2 Emissions(g/km)\", color=\"Fuel Type\", size=  'Engine Size(L)', title='CO2 Emissions by Vehicle')\nfig.show()\n# The graph shows how many carbon dioxide emissions are released by different vehicle types, wich fuel types were used, and the engine size used in the vehicle. Size of the engine are represented by the size of the dots.\n# Two seater cars with premium gasoline tend to produce the highest amounts of CO2 emissions\n# Diesel produces less carbon dioxide emissions\n","output":{"0":{"data":{"iframe":"9ccd40839b1b09ce29193ed005fa70c19c80536d"},"exec_count":18,"output_type":"execute_result"}},"pos":17,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":21,"id":"63e33c","input":"df.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Make</th>\n      <th>Model</th>\n      <th>Vehicle Class</th>\n      <th>Engine Size(L)</th>\n      <th>Cylinders</th>\n      <th>Fuel Type</th>\n      <th>Fuel Consumption Comb (mpg)</th>\n      <th>CO2 Emissions(g/km)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>ACURA</td>\n      <td>ILX</td>\n      <td>COMPACT</td>\n      <td>2.0</td>\n      <td>4</td>\n      <td>Z</td>\n      <td>33</td>\n      <td>196</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>ACURA</td>\n      <td>ILX</td>\n      <td>COMPACT</td>\n      <td>2.4</td>\n      <td>4</td>\n      <td>Z</td>\n      <td>29</td>\n      <td>221</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>ACURA</td>\n      <td>ILX HYBRID</td>\n      <td>COMPACT</td>\n      <td>1.5</td>\n      <td>4</td>\n      <td>Z</td>\n      <td>48</td>\n      <td>136</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>ACURA</td>\n      <td>MDX 4WD</td>\n      <td>SUV - SMALL</td>\n      <td>3.5</td>\n      <td>6</td>\n      <td>Z</td>\n      <td>25</td>\n      <td>255</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>ACURA</td>\n      <td>RDX AWD</td>\n      <td>SUV - SMALL</td>\n      <td>3.5</td>\n      <td>6</td>\n      <td>Z</td>\n      <td>27</td>\n      <td>244</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"    Make       Model Vehicle Class  Engine Size(L)  Cylinders Fuel Type  \\\n0  ACURA         ILX       COMPACT             2.0          4         Z   \n1  ACURA         ILX       COMPACT             2.4          4         Z   \n2  ACURA  ILX HYBRID       COMPACT             1.5          4         Z   \n3  ACURA     MDX 4WD   SUV - SMALL             3.5          6         Z   \n4  ACURA     RDX AWD   SUV - SMALL             3.5          6         Z   \n\n   Fuel Consumption Comb (mpg)  CO2 Emissions(g/km)  \n0                           33                  196  \n1                           29                  221  \n2                           48                  136  \n3                           25                  255  \n4                           27                  244  "},"exec_count":21,"output_type":"execute_result"}},"pos":14,"type":"cell"}
{"cell_type":"code","exec_count":22,"id":"11dfac","input":"fig2 = px.scatter_matrix(df)\nfig2.show()","output":{"0":{"data":{"iframe":"cfa299ef2216fc06af86be070bd0471e2241da3c"},"exec_count":22,"output_type":"execute_result"}},"pos":18,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":39,"id":"b38dd7","input":"df[df[\"Fuel Type\"] == \"ethanol\"].head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Make</th>\n      <th>Model</th>\n      <th>Vehicle Class</th>\n      <th>Engine Size(L)</th>\n      <th>Cylinders</th>\n      <th>Fuel Type</th>\n      <th>Fuel Consumption Comb (mpg)</th>\n      <th>CO2 Emissions(g/km)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>145</th>\n      <td>BUICK</td>\n      <td>LACROSSE</td>\n      <td>MID-SIZE</td>\n      <td>3.6</td>\n      <td>6</td>\n      <td>ethanol</td>\n      <td>18</td>\n      <td>250</td>\n    </tr>\n    <tr>\n      <th>147</th>\n      <td>BUICK</td>\n      <td>LACROSSE AWD</td>\n      <td>MID-SIZE</td>\n      <td>3.6</td>\n      <td>6</td>\n      <td>ethanol</td>\n      <td>17</td>\n      <td>264</td>\n    </tr>\n    <tr>\n      <th>180</th>\n      <td>CADILLAC</td>\n      <td>ESCALADE AWD</td>\n      <td>SUV - STANDARD</td>\n      <td>6.2</td>\n      <td>8</td>\n      <td>ethanol</td>\n      <td>14</td>\n      <td>322</td>\n    </tr>\n    <tr>\n      <th>182</th>\n      <td>CADILLAC</td>\n      <td>ESCALADE ESV AWD</td>\n      <td>SUV - STANDARD</td>\n      <td>6.2</td>\n      <td>8</td>\n      <td>ethanol</td>\n      <td>13</td>\n      <td>354</td>\n    </tr>\n    <tr>\n      <th>206</th>\n      <td>CHEVROLET</td>\n      <td>EQUINOX</td>\n      <td>SUV - SMALL</td>\n      <td>3.6</td>\n      <td>6</td>\n      <td>ethanol</td>\n      <td>17</td>\n      <td>259</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"          Make             Model   Vehicle Class  Engine Size(L)  Cylinders  \\\n145      BUICK          LACROSSE        MID-SIZE             3.6          6   \n147      BUICK      LACROSSE AWD        MID-SIZE             3.6          6   \n180   CADILLAC      ESCALADE AWD  SUV - STANDARD             6.2          8   \n182   CADILLAC  ESCALADE ESV AWD  SUV - STANDARD             6.2          8   \n206  CHEVROLET           EQUINOX     SUV - SMALL             3.6          6   \n\n    Fuel Type  Fuel Consumption Comb (mpg)  CO2 Emissions(g/km)  \n145   ethanol                           18                  250  \n147   ethanol                           17                  264  \n180   ethanol                           14                  322  \n182   ethanol                           13                  354  \n206   ethanol                           17                  259  "},"exec_count":39,"output_type":"execute_result"}},"pos":20,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":41,"id":"9a7250","input":"df.replace(to_replace= 'Z', value= 'Premium gasoline', inplace = True)\ndf.replace(to_replace= 'X', value= 'Gasoline' , inplace= True)\ndf.replace(to_replace= 'D', value= 'Diesel' , inplace= True)\ndf.replace(to_replace= 'E', value= 'Ethanol' , inplace= True)\ndf.replace(to_replace= 'N', value= 'Natural gas' , inplace= True)","pos":19,"type":"cell"}
{"cell_type":"code","exec_count":49,"id":"54ffbf","input":"#Ameya \n#The graph shows how many carbon dioxide emissions are released by different vehicle types, wich fuel types were used, and the engine size used in the vehicle. Size of the engine are represented by the size of the dots.\n# Two seater cars with premium gasoline tend to produce the highest amounts of CO2 emissions\n# Diesel produces less carbon dioxide emissions than gasoline which is not what I expected\n\ndf.replace(to_replace= 'Z', value= 'Premium gasoline', inplace = True)\ndf.replace(to_replace= 'X', value= 'Gasoline' , inplace= True)\ndf.replace(to_replace= 'D', value= 'Diesel' , inplace= True)\ndf.replace(to_replace= 'E', value= 'Ethanol' , inplace= True)\ndf.replace(to_replace= 'N', value= 'Natural gas' , inplace= True)\n\nfig = px.scatter(df, x=\"Vehicle Class\", y=\"CO2 Emissions(g/km)\", color=\"Fuel Type\", size=  'Engine Size(L)', title='CO2 Emissions by Vehicle')\nfig.show()","output":{"0":{"data":{"iframe":"f0d999743b96a924d8aa521a2d2fa687681d91e0"},"exec_count":49,"output_type":"execute_result"}},"pos":21,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":50,"id":"abf590","input":"#Ameya\ndf[df [\"CO2 Emissions(g/km)\"] <=100]\n#Shows all cars that emmit less than 100g/km of CO2","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Make</th>\n      <th>Model</th>\n      <th>Vehicle Class</th>\n      <th>Engine Size(L)</th>\n      <th>Cylinders</th>\n      <th>Fuel Type</th>\n      <th>Fuel Consumption Comb (mpg)</th>\n      <th>CO2 Emissions(g/km)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>3824</th>\n      <td>HYUNDAI</td>\n      <td>IONIQ BLUE</td>\n      <td>FULL-SIZE</td>\n      <td>1.6</td>\n      <td>4</td>\n      <td>gasoline</td>\n      <td>69</td>\n      <td>96</td>\n    </tr>\n    <tr>\n      <th>4900</th>\n      <td>HYUNDAI</td>\n      <td>IONIQ BLUE</td>\n      <td>FULL-SIZE</td>\n      <td>1.6</td>\n      <td>4</td>\n      <td>gasoline</td>\n      <td>69</td>\n      <td>96</td>\n    </tr>\n    <tr>\n      <th>5931</th>\n      <td>HYUNDAI</td>\n      <td>IONIQ Blue</td>\n      <td>FULL-SIZE</td>\n      <td>1.6</td>\n      <td>4</td>\n      <td>gasoline</td>\n      <td>69</td>\n      <td>96</td>\n    </tr>\n    <tr>\n      <th>6949</th>\n      <td>HYUNDAI</td>\n      <td>IONIQ</td>\n      <td>FULL-SIZE</td>\n      <td>1.6</td>\n      <td>4</td>\n      <td>gasoline</td>\n      <td>67</td>\n      <td>99</td>\n    </tr>\n    <tr>\n      <th>6950</th>\n      <td>HYUNDAI</td>\n      <td>IONIQ Blue</td>\n      <td>FULL-SIZE</td>\n      <td>1.6</td>\n      <td>4</td>\n      <td>gasoline</td>\n      <td>69</td>\n      <td>96</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"         Make       Model Vehicle Class  Engine Size(L)  Cylinders Fuel Type  \\\n3824  HYUNDAI  IONIQ BLUE     FULL-SIZE             1.6          4  gasoline   \n4900  HYUNDAI  IONIQ BLUE     FULL-SIZE             1.6          4  gasoline   \n5931  HYUNDAI  IONIQ Blue     FULL-SIZE             1.6          4  gasoline   \n6949  HYUNDAI       IONIQ     FULL-SIZE             1.6          4  gasoline   \n6950  HYUNDAI  IONIQ Blue     FULL-SIZE             1.6          4  gasoline   \n\n      Fuel Consumption Comb (mpg)  CO2 Emissions(g/km)  \n3824                           69                   96  \n4900                           69                   96  \n5931                           69                   96  \n6949                           67                   99  \n6950                           69                   96  "},"exec_count":50,"output_type":"execute_result"}},"pos":25,"type":"cell"}
{"cell_type":"code","exec_count":51,"id":"e280aa","input":"#Ameya\n#Shows all the cars that emmit more than 500g/km if CO2\ndf[df [\"CO2 Emissions(g/km)\"] >=500]","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Make</th>\n      <th>Model</th>\n      <th>Vehicle Class</th>\n      <th>Engine Size(L)</th>\n      <th>Cylinders</th>\n      <th>Fuel Type</th>\n      <th>Fuel Consumption Comb (mpg)</th>\n      <th>CO2 Emissions(g/km)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>4509</th>\n      <td>BUGATTI</td>\n      <td>CHIRON</td>\n      <td>TWO-SEATER</td>\n      <td>8.0</td>\n      <td>16</td>\n      <td>Premium gasoline</td>\n      <td>13</td>\n      <td>522</td>\n    </tr>\n    <tr>\n      <th>5575</th>\n      <td>BUGATTI</td>\n      <td>Chiron</td>\n      <td>TWO-SEATER</td>\n      <td>8.0</td>\n      <td>16</td>\n      <td>Premium gasoline</td>\n      <td>13</td>\n      <td>522</td>\n    </tr>\n    <tr>\n      <th>6640</th>\n      <td>BUGATTI</td>\n      <td>Chiron</td>\n      <td>TWO-SEATER</td>\n      <td>8.0</td>\n      <td>16</td>\n      <td>Premium gasoline</td>\n      <td>13</td>\n      <td>522</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"         Make   Model Vehicle Class  Engine Size(L)  Cylinders  \\\n4509  BUGATTI  CHIRON    TWO-SEATER             8.0         16   \n5575  BUGATTI  Chiron    TWO-SEATER             8.0         16   \n6640  BUGATTI  Chiron    TWO-SEATER             8.0         16   \n\n             Fuel Type  Fuel Consumption Comb (mpg)  CO2 Emissions(g/km)  \n4509  Premium gasoline                           13                  522  \n5575  Premium gasoline                           13                  522  \n6640  Premium gasoline                           13                  522  "},"exec_count":51,"output_type":"execute_result"}},"pos":26,"type":"cell"}
{"cell_type":"code","exec_count":52,"id":"c264a3","input":"#Ameya\n#Replaces X,Y,Z,D,N with Gasoline types\ndf.replace(to_replace= 'Z', value= 'Premium gasoline', inplace = True)\ndf.replace(to_replace= 'X', value= 'Gasoline' , inplace= True)\ndf.replace(to_replace= 'D', value= 'Diesel' , inplace= True)\ndf.replace(to_replace= 'E', value= 'Ethanol' , inplace= True)\ndf.replace(to_replace= 'N', value= 'Natural gas' , inplace= True)","pos":27,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"2eda01","input":"import pandas as pd\nimport plotly.express as px","pos":1,"type":"cell"}
{"cell_type":"code","exec_count":7,"id":"80e38d","input":"# Load dataset hint: pd.read_csv()\ndf= pd.read_csv('CO2 Emissions_Canada.csv')","pos":4,"type":"cell"}
{"cell_type":"code","exec_count":8,"id":"dcb2f1","input":"df.head()\n","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Make</th>\n      <th>Model</th>\n      <th>Vehicle Class</th>\n      <th>Engine Size(L)</th>\n      <th>Cylinders</th>\n      <th>Transmission</th>\n      <th>Fuel Type</th>\n      <th>Fuel Consumption City (L/100 km)</th>\n      <th>Fuel Consumption Hwy (L/100 km)</th>\n      <th>Fuel Consumption Comb (L/100 km)</th>\n      <th>Fuel Consumption Comb (mpg)</th>\n      <th>CO2 Emissions(g/km)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>ACURA</td>\n      <td>ILX</td>\n      <td>COMPACT</td>\n      <td>2.0</td>\n      <td>4</td>\n      <td>AS5</td>\n      <td>Z</td>\n      <td>9.9</td>\n      <td>6.7</td>\n      <td>8.5</td>\n      <td>33</td>\n      <td>196</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>ACURA</td>\n      <td>ILX</td>\n      <td>COMPACT</td>\n      <td>2.4</td>\n      <td>4</td>\n      <td>M6</td>\n      <td>Z</td>\n      <td>11.2</td>\n      <td>7.7</td>\n      <td>9.6</td>\n      <td>29</td>\n      <td>221</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>ACURA</td>\n      <td>ILX HYBRID</td>\n      <td>COMPACT</td>\n      <td>1.5</td>\n      <td>4</td>\n      <td>AV7</td>\n      <td>Z</td>\n      <td>6.0</td>\n      <td>5.8</td>\n      <td>5.9</td>\n      <td>48</td>\n      <td>136</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>ACURA</td>\n      <td>MDX 4WD</td>\n      <td>SUV - SMALL</td>\n      <td>3.5</td>\n      <td>6</td>\n      <td>AS6</td>\n      <td>Z</td>\n      <td>12.7</td>\n      <td>9.1</td>\n      <td>11.1</td>\n      <td>25</td>\n      <td>255</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>ACURA</td>\n      <td>RDX AWD</td>\n      <td>SUV - SMALL</td>\n      <td>3.5</td>\n      <td>6</td>\n      <td>AS6</td>\n      <td>Z</td>\n      <td>12.1</td>\n      <td>8.7</td>\n      <td>10.6</td>\n      <td>27</td>\n      <td>244</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"    Make       Model Vehicle Class  Engine Size(L)  Cylinders Transmission  \\\n0  ACURA         ILX       COMPACT             2.0          4          AS5   \n1  ACURA         ILX       COMPACT             2.4          4           M6   \n2  ACURA  ILX HYBRID       COMPACT             1.5          4          AV7   \n3  ACURA     MDX 4WD   SUV - SMALL             3.5          6          AS6   \n4  ACURA     RDX AWD   SUV - SMALL             3.5          6          AS6   \n\n  Fuel Type  Fuel Consumption City (L/100 km)  \\\n0         Z                               9.9   \n1         Z                              11.2   \n2         Z                               6.0   \n3         Z                              12.7   \n4         Z                              12.1   \n\n   Fuel Consumption Hwy (L/100 km)  Fuel Consumption Comb (L/100 km)  \\\n0                              6.7                               8.5   \n1                              7.7                               9.6   \n2                              5.8                               5.9   \n3                              9.1                              11.1   \n4                              8.7                              10.6   \n\n   Fuel Consumption Comb (mpg)  CO2 Emissions(g/km)  \n0                           33                  196  \n1                           29                  221  \n2                           48                  136  \n3                           25                  255  \n4                           27                  244  "},"exec_count":8,"output_type":"execute_result"}},"pos":6,"type":"cell"}
{"cell_type":"markdown","id":"0d5bc5","input":"### Data Cleaning","pos":22,"type":"cell"}
{"cell_type":"markdown","id":"5e305a","input":"### Import Packages\n\n","pos":0,"type":"cell"}
{"cell_type":"markdown","id":"639798","input":"### Exploratory Data Analysis","pos":15,"type":"cell"}
{"cell_type":"markdown","id":"9661ac","input":"### Data Overview\n\n","pos":2,"type":"cell"}
{"cell_type":"markdown","id":"9b04ae","input":"Data source: [https://www.kaggle.com/datasets/debajyotipodder/co2\\-emission\\-by\\-vehicles](https://www.kaggle.com/datasets/debajyotipodder/co2-emission-by-vehicles)\n\n","pos":3,"type":"cell"}
{"id":0,"time":1658773428064,"type":"user"}
{"last_load":1658786263841,"type":"file"}